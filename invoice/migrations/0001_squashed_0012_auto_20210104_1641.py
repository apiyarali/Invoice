# Generated by Django 3.1.5 on 2021-01-04 21:56

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=255, verbose_name='Phone Number')),
                ('organization', models.CharField(blank=True, max_length=255, verbose_name='Business Name')),
                ('address1', models.CharField(blank=True, max_length=255, verbose_name='Address 1')),
                ('address2', models.CharField(blank=True, max_length=255, verbose_name='Address 2')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='City')),
                ('zipCode', models.CharField(blank=True, max_length=255, verbose_name='Zip/Postal Code')),
                ('province', models.CharField(blank=True, max_length=255, verbose_name='Province/State')),
                ('country', models.CharField(blank=True, max_length=255, verbose_name='Country')),
                ('created', models.DateTimeField(blank=True, default=datetime.datetime(2021, 1, 4, 16, 41, 9, 747464))),
                ('firstName', models.CharField(max_length=255, verbose_name='First Name')),
                ('lastName', models.CharField(max_length=255, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='invoice.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoiceTotal', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('created', models.DateField(blank=True)),
                ('paidDate', models.DateField(blank=True, null=True)),
                ('dueDate', models.DateField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customerInvoice', to='invoice.customer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='invoice.user')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productName', models.CharField(max_length=255, verbose_name='Product Name')),
                ('productDescription', models.CharField(blank=True, max_length=255, verbose_name='Product Description')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=6)),
                ('created', models.DateTimeField(blank=True, default=datetime.datetime(2021, 1, 4, 16, 41, 9, 747464))),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='invoice.user')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(default=1, verbose_name='Quantity')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoiceItems', to='invoice.invoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productItems', to='invoice.product')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=255, verbose_name='Phone Number')),
                ('organization', models.CharField(blank=True, max_length=255, verbose_name='Business Name')),
                ('address1', models.CharField(blank=True, max_length=255, verbose_name='Address 1')),
                ('address2', models.CharField(blank=True, max_length=255, verbose_name='Address 2')),
                ('city', models.CharField(blank=True, max_length=255, verbose_name='City')),
                ('zipCode', models.CharField(blank=True, max_length=255, verbose_name='Zip/Postal Code')),
                ('province', models.CharField(blank=True, max_length=255, verbose_name='Province/State')),
                ('country', models.CharField(blank=True, max_length=255, verbose_name='Country')),
                ('created', models.DateTimeField(blank=True, default=datetime.datetime(2021, 1, 4, 16, 41, 9, 747464))),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='invoice.user')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
